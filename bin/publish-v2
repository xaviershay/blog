#!/usr/bin/env ruby

require "open3"
require 'yaml'
require 'pp'

config = YAML.load(File.read("s3_website.yml"))

staging = "_site"
bucket = config.fetch("s3_bucket")
cloudfront_id = config.fetch("cloudfront_distribution_id")
redirects = config.fetch("redirects", {})

# List from https://github.com/philnash/jekyll-gzip
compressed = %w(
  html
  css
  js
  json
  txt
  ttf
  atom
  stl
  xml
  svg
  eot
)

cmds = []


# TODO: This approach always reuploads everything. Not what we want. I think
# sync uses mtime, so need a way of preserving that.

cmds << "JEKYLL_ENV=production bundle exec jekyll build --incremental"
params = compressed.map {|x| "--include \"*.#{x}\"" }.join(" ")
cmds << "aws s3 sync %s s3://%s/ --content-encoding gzip --exclude \"*\" #{params}" % [staging, bucket]
params = compressed.map {|x| "--exclude \"*.#{x}\"" }.join(" ")
cmds << "aws s3 sync %s s3://%s/ #{params}" % [staging, bucket]
cmds << "aws cloudfront create-invalidation --distribution-id %s --paths \"/*\"" % [cloudfront_id]

if false
  redirects.each do |key, value|
    cmds << "aws s3api put-object --bucket %s --key %s --website-redirect-location %s" % [
      bucket,
      key,
      value
    ]
  end
else
  cmds << "echo Skipping redirects, edit script to change"
end

def run(command)
  Open3.popen2e(command) do |stdin, stdout_and_stderr, wait_thr|
    stdout_and_stderr.each_line do |line|
      puts line
    end

    exit_status = wait_thr.value
    unless exit_status.success?
      abort "Command failed with exit status #{exit_status.exitstatus}"
    end
  end
end

cmds.each do |cmd|
  puts cmd
  run(cmd)
end
